{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { CustomSelect } from \"common/components/CustomSelect\";\nimport React, { useMemo } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./index.less\";\nexport var SortSelect = function SortSelect(_ref) {\n  var onChange = _ref.onChange,\n      value = _ref.value,\n      rest = _objectWithoutProperties(_ref, [\"onChange\", \"value\"]);\n\n  var options = useMemo(function () {\n    return [{\n      id: \"price\",\n      label: /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"common.sort.priceAscending\"\n      }),\n      value: \"ascending\"\n    }, {\n      id: \"price\",\n      label: /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"common.sort.priceDescending\"\n      }),\n      value: \"descending\"\n    }];\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sort-select\"\n  }, /*#__PURE__*/React.createElement(CustomSelect, _extends({}, rest, {\n    components: {\n      IndicatorSeparator: null\n    },\n    onChange: onChange,\n    options: options,\n    placeholder: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"common.sort.placeholder\"\n    }),\n    value: value\n  })));\n};","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/common/components/CustomSelect/SortSelect/index.jsx"],"names":["SortSelect","onChange","value","rest","options","useMemo","id","label","IndicatorSeparator"],"mappings":";;AACA,SAAA,YAAA,QAAA,gCAAA;AACA,OAAA,KAAA,IAAA,OAAA,QAAA,OAAA;AACA,SAAA,gBAAA,QAAA,YAAA;AACA,OAAA,cAAA;AAEA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAmD;AAAA,MAAhDC,QAAgD,GAAA,IAAA,CAAhDA,QAAgD;AAAA,MAAtCC,KAAsC,GAAA,IAAA,CAAtCA,KAAsC;AAAA,MAA5BC,IAA4B,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,OAAA,CAAA,CAAA;;AACzE,MAAMC,OAAO,GAAGC,OAAO,CAAC,YAAM;AAC1B,WAAO,CACH;AACIC,MAAAA,EAAE,EADN,OAAA;AAEIC,MAAAA,KAAK,EAAA,aAAE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,QAAA,EAAE,EAAC;AAArB,OAAA,CAFX;AAGIL,MAAAA,KAAK,EAAE;AAHX,KADG,EAMH;AACII,MAAAA,EAAE,EADN,OAAA;AAEIC,MAAAA,KAAK,EAAA,aAAE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,QAAA,EAAE,EAAC;AAArB,OAAA,CAFX;AAGIL,MAAAA,KAAK,EAAE;AAHX,KANG,CAAP;AADmB,GAAA,EAAvB,EAAuB,CAAvB;AAeA,SAAA,aACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,aACI,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEI,IAAA,UAAU,EAAE;AACRM,MAAAA,kBAAkB,EAAE;AADZ,KAFhB;AAKI,IAAA,QAAQ,EALZ,QAAA;AAMI,IAAA,OAAO,EANX,OAAA;AAOI,IAAA,WAAW,EAAA,aAAE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,MAAA,EAAE,EAAC;AAArB,KAAA,CAPjB;AAQI,IAAA,KAAK,EAAEN;AARX,GAAA,CAAA,CADJ,CADJ;AAhBG,CAAA","sourcesContent":["// @flow\nimport { CustomSelect } from \"common/components/CustomSelect\";\nimport React, { useMemo } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./index.less\";\n\nexport const SortSelect = ({ onChange, value, ...rest }: any): React$Node => {\n    const options = useMemo(() => {\n        return [\n            {\n                id: \"price\",\n                label: <FormattedMessage id=\"common.sort.priceAscending\" />,\n                value: \"ascending\",\n            },\n            {\n                id: \"price\",\n                label: <FormattedMessage id=\"common.sort.priceDescending\" />,\n                value: \"descending\",\n            },\n        ];\n    }, []);\n\n    return (\n        <div className=\"sort-select\">\n            <CustomSelect\n                {...rest}\n                components={{\n                    IndicatorSeparator: null,\n                }}\n                onChange={onChange}\n                options={options}\n                placeholder={<FormattedMessage id=\"common.sort.placeholder\" />}\n                value={value}\n            />\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}