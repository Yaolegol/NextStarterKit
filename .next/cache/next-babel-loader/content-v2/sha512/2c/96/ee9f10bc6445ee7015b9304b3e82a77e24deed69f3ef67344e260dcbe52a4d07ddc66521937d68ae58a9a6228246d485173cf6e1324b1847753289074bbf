{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { isObjectEmpty } from \"common/helpers/object\";\nimport { createSelector } from \"reselect\";\n\nvar getUserState = function getUserState(state) {\n  return state.user;\n};\n\nexport var selectUser = createSelector([getUserState], function (_ref) {\n  var user = _ref.user;\n\n  if (!isObjectEmpty(user)) {\n    return _objectSpread({}, user);\n  }\n\n  return null;\n});\nexport var selectUserPurchases = createSelector([selectUser], function (user) {\n  if (user) {\n    var purchases = user.purchases;\n\n    if (!purchases) {\n      return [];\n    }\n\n    return purchases.map(function (_ref2) {\n      var purchaseID = _ref2.purchaseID;\n      return purchaseID.purchase;\n    });\n  }\n\n  return [];\n});","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/modules/User/selectors/index.jsx"],"names":["getUserState","state","selectUser","createSelector","user","isObjectEmpty","selectUserPurchases","purchases","purchaseID"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAA,aAAA,QAAA,uBAAA;AACA,SAAA,cAAA,QAAA,UAAA;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,KAAA,EAAW;AAC5B,SAAOC,KAAK,CAAZ,IAAA;AADJ,CAAA;;AAIA,OAAO,IAAMC,UAAe,GAAGC,cAAc,CAAC,CAAD,YAAC,CAAD,EAAiB,UAAA,IAAA,EAAc;AAAA,MAAXC,IAAW,GAAA,IAAA,CAAXA,IAAW;;AACxE,MAAI,CAACC,aAAa,CAAlB,IAAkB,CAAlB,EAA0B;AACtB,WAAA,aAAA,CAAA,EAAA,EAAA,IAAA,CAAA;AACH;;AACD,SAAA,IAAA;AAJG,CAAsC,CAAtC;AAOP,OAAO,IAAMC,mBAAwB,GAAGH,cAAc,CAAC,CAAD,UAAC,CAAD,EAAe,UAAA,IAAA,EAAU;AAC3E,MAAA,IAAA,EAAU;AAAA,QACEI,SADF,GACgBH,IADhB,CAAA,SAAA;;AAEN,QAAI,CAAJ,SAAA,EAAgB;AACZ,aAAA,EAAA;AACH;;AACD,WAAO,SAAS,CAAT,GAAA,CAAc,UAAA,KAAA,EAAA;AAAA,UAAGI,UAAH,GAAA,KAAA,CAAA,UAAA;AAAA,aAAoBA,UAAU,CAA9B,QAAA;AAArB,KAAO,CAAP;AACH;;AACD,SAAA,EAAA;AARG,CAA+C,CAA/C","sourcesContent":["// @flow\nimport { isObjectEmpty } from \"common/helpers/object\";\nimport { createSelector } from \"reselect\";\n\nconst getUserState = (state) => {\n    return state.user;\n};\n\nexport const selectUser: any = createSelector([getUserState], ({ user }) => {\n    if (!isObjectEmpty(user)) {\n        return { ...user };\n    }\n    return null;\n});\n\nexport const selectUserPurchases: any = createSelector([selectUser], (user) => {\n    if (user) {\n        const { purchases } = user;\n        if (!purchases) {\n            return [];\n        }\n        return purchases.map(({ purchaseID }) => purchaseID.purchase);\n    }\n    return [];\n});\n"]},"metadata":{},"sourceType":"module"}