{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { Tab } from \"common/components/Tabs/Tab\";\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport \"./index.less\";\nexport var Tabs = function Tabs(_ref) {\n  _s();\n\n  var activeTabId = _ref.activeTabId,\n      content = _ref.content,\n      ContentComponent = _ref.contentComponent,\n      tabs = _ref.tabs;\n\n  var _useState = useState(activeTabId),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeTab = _useState2[0],\n      setActiveTab = _useState2[1];\n\n  var onClickTab = useCallback(function (e) {\n    var id = e.target.dataset.id;\n    setActiveTab(Number(id));\n  }, []);\n\n  var _content = useMemo(function () {\n    return content.map(function (_ref2) {\n      var id = _ref2.id,\n          data = _ref2.data;\n      return /*#__PURE__*/React.createElement(ContentComponent, _extends({}, data, {\n        isActive: id === activeTab,\n        key: id\n      }));\n    });\n  }, [activeTab, content]);\n\n  var _tabs = useMemo(function () {\n    return tabs.map(function (_ref3) {\n      var id = _ref3.id,\n          name = _ref3.name;\n      return /*#__PURE__*/React.createElement(Tab, {\n        \"data-id\": id,\n        isActive: id === activeTab,\n        key: id,\n        onClick: onClickTab\n      }, name);\n    });\n  }, [activeTab, onClickTab, tabs]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs__menu-container\"\n  }, _tabs), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs__content-container\"\n  }, _content));\n};\n\n_s(Tabs, \"fUcma2q4dqgU/5CmqhwC+87q03s=\");\n\n_c = Tabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabs\");","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/common/components/Tabs/index.jsx"],"names":["Tab","React","useState","useMemo","useCallback","Tabs","activeTabId","content","ContentComponent","contentComponent","tabs","activeTab","setActiveTab","onClickTab","e","id","target","dataset","Number","_content","map","data","_tabs","name"],"mappings":";;;;;AACA,SAASA,GAAT,QAAoB,4BAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAO,cAAP;AAYA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAKM;AAAA;;AAAA,MAJtBC,WAIsB,QAJtBA,WAIsB;AAAA,MAHtBC,OAGsB,QAHtBA,OAGsB;AAAA,MAFJC,gBAEI,QAFtBC,gBAEsB;AAAA,MADtBC,IACsB,QADtBA,IACsB;;AAAA,kBACYR,QAAQ,CAACI,WAAD,CADpB;AAAA;AAAA,MACfK,SADe;AAAA,MACJC,YADI;;AAGtB,MAAMC,UAAU,GAAGT,WAAW,CAAC,UAACU,CAAD,EAAO;AAAA,QAC1BC,EAD0B,GACnBD,CAAC,CAACE,MAAF,CAASC,OADU,CAC1BF,EAD0B;AAElCH,IAAAA,YAAY,CAACM,MAAM,CAACH,EAAD,CAAP,CAAZ;AACH,GAH6B,EAG3B,EAH2B,CAA9B;;AAKA,MAAMI,QAAQ,GAAGhB,OAAO,CAAC,YAAM;AAC3B,WAAOI,OAAO,CAACa,GAAR,CAAY,iBAAkB;AAAA,UAAfL,EAAe,SAAfA,EAAe;AAAA,UAAXM,IAAW,SAAXA,IAAW;AACjC,0BACI,oBAAC,gBAAD,eACQA,IADR;AAEI,QAAA,QAAQ,EAAEN,EAAE,KAAKJ,SAFrB;AAGI,QAAA,GAAG,EAAEI;AAHT,SADJ;AAOH,KARM,CAAP;AASH,GAVuB,EAUrB,CAACJ,SAAD,EAAYJ,OAAZ,CAVqB,CAAxB;;AAYA,MAAMe,KAAK,GAAGnB,OAAO,CAAC,YAAM;AACxB,WAAOO,IAAI,CAACU,GAAL,CAAS,iBAAkB;AAAA,UAAfL,EAAe,SAAfA,EAAe;AAAA,UAAXQ,IAAW,SAAXA,IAAW;AAC9B,0BACI,oBAAC,GAAD;AACI,mBAASR,EADb;AAEI,QAAA,QAAQ,EAAEA,EAAE,KAAKJ,SAFrB;AAGI,QAAA,GAAG,EAAEI,EAHT;AAII,QAAA,OAAO,EAAEF;AAJb,SAMKU,IANL,CADJ;AAUH,KAXM,CAAP;AAYH,GAboB,EAalB,CAACZ,SAAD,EAAYE,UAAZ,EAAwBH,IAAxB,CAbkB,CAArB;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAuCY,KAAvC,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0CH,QAA1C,CAFJ,CADJ;AAMH,CA9CM;;GAAMd,I;;KAAAA,I","sourcesContent":["// @flow\nimport { Tab } from \"common/components/Tabs/Tab\";\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport \"./index.less\";\n\ntype TProps = {\n    activeTabId: number,\n    content: Array<{\n        id: number,\n        data: { address: any, email: any, phone: any },\n    }>,\n    contentComponent: any,\n    tabs: Array<{ id: number, name: any }>,\n};\n\nexport const Tabs = ({\n    activeTabId,\n    content,\n    contentComponent: ContentComponent,\n    tabs,\n}: TProps): React$Node => {\n    const [activeTab, setActiveTab] = useState(activeTabId);\n\n    const onClickTab = useCallback((e) => {\n        const { id } = e.target.dataset;\n        setActiveTab(Number(id));\n    }, []);\n\n    const _content = useMemo(() => {\n        return content.map(({ id, data }) => {\n            return (\n                <ContentComponent\n                    {...data}\n                    isActive={id === activeTab}\n                    key={id}\n                />\n            );\n        });\n    }, [activeTab, content]);\n\n    const _tabs = useMemo(() => {\n        return tabs.map(({ id, name }) => {\n            return (\n                <Tab\n                    data-id={id}\n                    isActive={id === activeTab}\n                    key={id}\n                    onClick={onClickTab}\n                >\n                    {name}\n                </Tab>\n            );\n        });\n    }, [activeTab, onClickTab, tabs]);\n\n    return (\n        <div className=\"tabs\">\n            <div className=\"tabs__menu-container\">{_tabs}</div>\n            <div className=\"tabs__content-container\">{_content}</div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}