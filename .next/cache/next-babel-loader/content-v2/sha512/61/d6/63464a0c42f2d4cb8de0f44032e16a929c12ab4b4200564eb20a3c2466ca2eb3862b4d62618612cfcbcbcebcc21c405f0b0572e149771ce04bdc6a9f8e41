{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { CustomSelect } from \"common/components/CustomSelect\";\nimport { actionSetLocale } from \"modules/Locale/actions\";\nimport { selectCurrentLocale } from \"modules/Locale/selectors\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./index.less\";\nvar options = [{\n  label: \"En\",\n  value: \"en\"\n}, {\n  label: \"Ru\",\n  value: \"ru\"\n}];\nexport var LangSelect = function LangSelect() {\n  var currentLocale = useSelector(selectCurrentLocale);\n  var dispatch = useDispatch();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedOption = _useState2[0],\n      setSelectedOption = _useState2[1];\n\n  var onSelectChange = function onSelectChange(value) {\n    setSelectedOption(value);\n    dispatch(actionSetLocale(value.value));\n  };\n\n  useEffect(function () {\n    var localeOption = options.find(function (opt) {\n      return opt.value === currentLocale;\n    });\n    setSelectedOption(localeOption);\n  }, [currentLocale]);\n  return /*#__PURE__*/React.createElement(CustomSelect, {\n    components: {\n      IndicatorSeparator: null\n    },\n    onChange: onSelectChange,\n    options: options,\n    value: selectedOption\n  });\n};","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/modules/Locale/components/LangSelect/index.jsx"],"names":["CustomSelect","actionSetLocale","selectCurrentLocale","React","useEffect","useState","useDispatch","useSelector","options","label","value","LangSelect","currentLocale","dispatch","selectedOption","setSelectedOption","onSelectChange","localeOption","find","opt","IndicatorSeparator"],"mappings":";AACA,SAASA,YAAT,QAA6B,gCAA7B;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,cAAP;AAEA,IAAMC,OAAO,GAAG,CACZ;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CADY,EAEZ;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAFY,CAAhB;AAKA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAkB;AACxC,MAAMC,aAAa,GAAGL,WAAW,CAACL,mBAAD,CAAjC;AACA,MAAMW,QAAQ,GAAGP,WAAW,EAA5B;;AAFwC,kBAIID,QAAQ,CAAC,IAAD,CAJZ;AAAA;AAAA,MAIjCS,cAJiC;AAAA,MAIjBC,iBAJiB;;AAKxC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACN,KAAD,EAAW;AAC9BK,IAAAA,iBAAiB,CAACL,KAAD,CAAjB;AACAG,IAAAA,QAAQ,CAACZ,eAAe,CAACS,KAAK,CAACA,KAAP,CAAhB,CAAR;AACH,GAHD;;AAKAN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMa,YAAY,GAAGT,OAAO,CAACU,IAAR,CAAa,UAACC,GAAD;AAAA,aAASA,GAAG,CAACT,KAAJ,KAAcE,aAAvB;AAAA,KAAb,CAArB;AACAG,IAAAA,iBAAiB,CAACE,YAAD,CAAjB;AACH,GAHQ,EAGN,CAACL,aAAD,CAHM,CAAT;AAKA,sBACI,oBAAC,YAAD;AACI,IAAA,UAAU,EAAE;AACRQ,MAAAA,kBAAkB,EAAE;AADZ,KADhB;AAII,IAAA,QAAQ,EAAEJ,cAJd;AAKI,IAAA,OAAO,EAAER,OALb;AAMI,IAAA,KAAK,EAAEM;AANX,IADJ;AAUH,CAzBM","sourcesContent":["// @flow\nimport { CustomSelect } from \"common/components/CustomSelect\";\nimport { actionSetLocale } from \"modules/Locale/actions\";\nimport { selectCurrentLocale } from \"modules/Locale/selectors\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./index.less\";\n\nconst options = [\n    { label: \"En\", value: \"en\" },\n    { label: \"Ru\", value: \"ru\" },\n];\n\nexport const LangSelect = (): React$Node => {\n    const currentLocale = useSelector(selectCurrentLocale);\n    const dispatch = useDispatch();\n\n    const [selectedOption, setSelectedOption] = useState(null);\n    const onSelectChange = (value) => {\n        setSelectedOption(value);\n        dispatch(actionSetLocale(value.value));\n    };\n\n    useEffect(() => {\n        const localeOption = options.find((opt) => opt.value === currentLocale);\n        setSelectedOption(localeOption);\n    }, [currentLocale]);\n\n    return (\n        <CustomSelect\n            components={{\n                IndicatorSeparator: null,\n            }}\n            onChange={onSelectChange}\n            options={options}\n            value={selectedOption}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}