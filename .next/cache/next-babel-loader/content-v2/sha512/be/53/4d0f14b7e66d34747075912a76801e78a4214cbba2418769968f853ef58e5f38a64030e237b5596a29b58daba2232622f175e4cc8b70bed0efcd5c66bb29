{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { CART_ACTION_TYPES } from \"modules/Cart/constants\";\nimport { buyProducts } from \"modules/Cart/service\";\nvar BUY_PRODUCTS_FAIL = CART_ACTION_TYPES.BUY_PRODUCTS_FAIL,\n    BUY_PRODUCTS_START = CART_ACTION_TYPES.BUY_PRODUCTS_START,\n    BUY_PRODUCTS_SUCCESS = CART_ACTION_TYPES.BUY_PRODUCTS_SUCCESS,\n    DECREMENT_PRODUCTS_COUNT = CART_ACTION_TYPES.DECREMENT_PRODUCTS_COUNT,\n    INCREMENT_PRODUCTS_COUNT = CART_ACTION_TYPES.INCREMENT_PRODUCTS_COUNT,\n    RESET_CART = CART_ACTION_TYPES.RESET_CART;\n\nvar actionBuyProductsFail = function actionBuyProductsFail(errors) {\n  return function (dispatch) {\n    dispatch({\n      data: errors,\n      type: BUY_PRODUCTS_FAIL\n    });\n  };\n};\n\nvar actionBuyProductsStart = function actionBuyProductsStart() {\n  return function (dispatch) {\n    dispatch({\n      type: BUY_PRODUCTS_START\n    });\n  };\n};\n\nvar actionBuyProductsSuccess = function actionBuyProductsSuccess(data) {\n  return function (dispatch) {\n    dispatch({\n      data: data,\n      type: BUY_PRODUCTS_SUCCESS\n    });\n  };\n};\n\nexport var actionBuyProducts = function actionBuyProducts(products) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var _yield$buyProducts, data, errors;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(actionBuyProductsStart());\n              _context.prev = 1;\n              _context.next = 4;\n              return buyProducts(products);\n\n            case 4:\n              _yield$buyProducts = _context.sent;\n              data = _yield$buyProducts.data;\n              errors = _yield$buyProducts.errors;\n\n              if (!errors) {\n                dispatch(actionBuyProductsSuccess(data));\n              } else {\n                dispatch(actionBuyProductsFail(errors));\n              }\n\n              return _context.abrupt(\"return\", {\n                data: data,\n                errors: errors\n              });\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(actionBuyProductsFail([_context.t0]));\n              return _context.abrupt(\"return\", {\n                errors: _context.t0\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var actionDecCartProductsCount = function actionDecCartProductsCount(id) {\n  return function (dispatch, getState) {\n    dispatch({\n      data: {\n        id: id\n      },\n      type: DECREMENT_PRODUCTS_COUNT\n    });\n  };\n};\nexport var actionIncCartProductsCount = function actionIncCartProductsCount(id) {\n  return function (dispatch, getState) {\n    dispatch({\n      data: {\n        id: id\n      },\n      type: INCREMENT_PRODUCTS_COUNT\n    });\n  };\n};\nexport var actionResetCart = function actionResetCart() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: RESET_CART\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}