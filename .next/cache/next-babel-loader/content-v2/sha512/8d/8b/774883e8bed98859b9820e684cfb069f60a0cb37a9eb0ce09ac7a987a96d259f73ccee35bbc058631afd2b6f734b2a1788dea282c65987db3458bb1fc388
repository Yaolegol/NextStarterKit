{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { createSelector } from \"reselect\";\nimport { selectProductsList } from \"modules/Shop/selectors\";\n\nvar getCartState = function getCartState(state) {\n  return state.cart;\n};\n\nexport var selectCartProducts = createSelector([getCartState], function (_ref) {\n  var products = _ref.products;\n  return products;\n});\nexport var selectCartProductsItems = createSelector([selectCartProducts], function (_ref2) {\n  var items = _ref2.items;\n  return items;\n});\nexport var selectCartProductsTotal = createSelector([selectCartProducts], function (_ref3) {\n  var total = _ref3.total;\n  return total;\n});\nexport var selectCartProductsData = createSelector([selectCartProductsItems, selectProductsList], function (items, products) {\n  var buyingItemsId = Object.keys(items).filter(function (key) {\n    return items[key].count > 0;\n  });\n  var buyingProducts = products.filter(function (_ref4) {\n    var _id = _ref4._id;\n    return buyingItemsId.includes(_id);\n  });\n  return buyingProducts.map(function (product) {\n    var _id = product._id,\n        price = product.price;\n    var countInCart = items[_id].count;\n    var totalPrice = countInCart * price;\n    return _objectSpread(_objectSpread({}, product), {}, {\n      countInCart: countInCart,\n      totalPrice: totalPrice\n    });\n  });\n});","map":null,"metadata":{},"sourceType":"module"}