{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { getRandomString } from \"common/helpers/random\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport \"./index.less\";\nexport var CustomSelect = function CustomSelect(_ref) {\n  var id = _ref.id,\n      _ref$isSearchable = _ref.isSearchable,\n      isSearchable = _ref$isSearchable === void 0 ? false : _ref$isSearchable,\n      onChange = _ref.onChange,\n      options = _ref.options,\n      _ref$placeholder = _ref.placeholder,\n      placeholder = _ref$placeholder === void 0 ? \"\" : _ref$placeholder,\n      value = _ref.value,\n      rest = _objectWithoutProperties(_ref, [\"id\", \"isSearchable\", \"onChange\", \"options\", \"placeholder\", \"value\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-select\"\n  }, /*#__PURE__*/React.createElement(Select, _extends({}, rest, {\n    className: \"select\",\n    classNamePrefix: \"select\",\n    instanceId: getRandomString(),\n    isSearchable: isSearchable,\n    onChange: onChange,\n    options: options,\n    placeholder: placeholder,\n    value: value\n  })));\n};\n_c = CustomSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelect\");","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/common/components/CustomSelect/index.jsx"],"names":["CustomSelect","id","isSearchable","onChange","options","placeholder","value","rest","getRandomString"],"mappings":";;AACA,SAAA,eAAA,QAAA,uBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,cAAA;AACA,OAAA,cAAA;AAiBA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAQ2B;AAAA,MAPtBC,EAOsB,GAAA,IAAA,CAPtBA,EAOsB;AAAA,MAAA,iBAAA,GAAA,IAAA,CANtBC,YAMsB;AAAA,MANtBA,YAMsB,GAAA,iBAAA,KAAA,KAAA,CAAA,GANP,KAMO,GAAA,iBAAA;AAAA,MALtBC,QAKsB,GAAA,IAAA,CALtBA,QAKsB;AAAA,MAJtBC,OAIsB,GAAA,IAAA,CAJtBA,OAIsB;AAAA,MAAA,gBAAA,GAAA,IAAA,CAHtBC,WAGsB;AAAA,MAHtBA,WAGsB,GAAA,gBAAA,KAAA,KAAA,CAAA,GAHR,EAGQ,GAAA,gBAAA;AAAA,MAFtBC,KAEsB,GAAA,IAAA,CAFtBA,KAEsB;AAAA,MADnBC,IACmB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,IAAA,EAAA,cAAA,EAAA,UAAA,EAAA,SAAA,EAAA,aAAA,EAAA,OAAA,CAAA,CAAA;;AACnD,SAAA,aACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,aACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEI,IAAA,SAAS,EAFb,QAAA;AAGI,IAAA,eAAe,EAHnB,QAAA;AAII,IAAA,UAAU,EAAEC,eAJhB,EAAA;AAKI,IAAA,YAAY,EALhB,YAAA;AAMI,IAAA,QAAQ,EANZ,QAAA;AAOI,IAAA,OAAO,EAPX,OAAA;AAQI,IAAA,WAAW,EARf,WAAA;AASI,IAAA,KAAK,EAAEF;AATX,GAAA,CAAA,CADJ,CADJ;AATG,CAAA;KAAMN,Y","sourcesContent":["// @flow\nimport { getRandomString } from \"common/helpers/random\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport \"./index.less\";\n\ntype TSelectOption = {\n    id?: any,\n    label: string,\n    value: string,\n};\n\ntype TProps = {\n    id: string,\n    isSearchable?: boolean,\n    onChange: (TSelectOption) => any,\n    options: Array<TSelectOption>,\n    placeholder?: string,\n    value: ?TSelectOption,\n};\n\nexport const CustomSelect = ({\n                                 id,\n                                 isSearchable = false,\n                                 onChange,\n                                 options,\n                                 placeholder = \"\",\n                                 value,\n                                 ...rest\n                             }: TProps): React$Node => {\n    return (\n        <div className=\"custom-select\">\n            <Select\n                {...rest}\n                className=\"select\"\n                classNamePrefix=\"select\"\n                instanceId={getRandomString()}\n                isSearchable={isSearchable}\n                onChange={onChange}\n                options={options}\n                placeholder={placeholder}\n                value={value}\n            />\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}