{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport \"./index.less\";\nexport var CustomSelect = function CustomSelect(_ref) {\n  var _ref$isSearchable = _ref.isSearchable,\n      isSearchable = _ref$isSearchable === void 0 ? false : _ref$isSearchable,\n      onChange = _ref.onChange,\n      options = _ref.options,\n      _ref$placeholder = _ref.placeholder,\n      placeholder = _ref$placeholder === void 0 ? \"\" : _ref$placeholder,\n      value = _ref.value,\n      rest = _objectWithoutProperties(_ref, [\"isSearchable\", \"onChange\", \"options\", \"placeholder\", \"value\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-select\"\n  }, /*#__PURE__*/React.createElement(Select, _extends({}, rest, {\n    className: \"select\",\n    classNamePrefix: \"select\",\n    isSearchable: isSearchable,\n    onChange: onChange,\n    options: options,\n    placeholder: placeholder,\n    value: value\n  })));\n};\n_c = CustomSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelect\");","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/common/components/CustomSelect/index.jsx"],"names":["React","Select","CustomSelect","isSearchable","onChange","options","placeholder","value","rest"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,cAAP;AAgBA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAOF;AAAA,+BANtBC,YAMsB;AAAA,MANtBA,YAMsB,kCANP,KAMO;AAAA,MALtBC,QAKsB,QALtBA,QAKsB;AAAA,MAJtBC,OAIsB,QAJtBA,OAIsB;AAAA,8BAHtBC,WAGsB;AAAA,MAHtBA,WAGsB,iCAHR,EAGQ;AAAA,MAFtBC,KAEsB,QAFtBA,KAEsB;AAAA,MADnBC,IACmB;;AACtB,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI,oBAAC,MAAD,eACQA,IADR;AAEI,IAAA,SAAS,EAAC,QAFd;AAGI,IAAA,eAAe,EAAC,QAHpB;AAII,IAAA,YAAY,EAAEL,YAJlB;AAKI,IAAA,QAAQ,EAAEC,QALd;AAMI,IAAA,OAAO,EAAEC,OANb;AAOI,IAAA,WAAW,EAAEC,WAPjB;AAQI,IAAA,KAAK,EAAEC;AARX,KADJ,CADJ;AAcH,CAtBM;KAAML,Y","sourcesContent":["// @flow\nimport React from \"react\";\nimport Select from \"react-select\";\nimport \"./index.less\";\n\ntype TSelectOption = {\n    id?: any,\n    label: string,\n    value: string,\n};\n\ntype TProps = {\n    isSearchable?: boolean,\n    onChange: (TSelectOption) => any,\n    options: Array<TSelectOption>,\n    placeholder?: string,\n    value: ?TSelectOption,\n};\n\nexport const CustomSelect = ({\n    isSearchable = false,\n    onChange,\n    options,\n    placeholder = \"\",\n    value,\n    ...rest\n}: TProps): React$Node => {\n    return (\n        <div className=\"custom-select\">\n            <Select\n                {...rest}\n                className=\"select\"\n                classNamePrefix=\"select\"\n                isSearchable={isSearchable}\n                onChange={onChange}\n                options={options}\n                placeholder={placeholder}\n                value={value}\n            />\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}