{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { SHOP_ACTION_TYPES } from \"modules/Shop/constants\";\nimport { selectCurrentPage, selectProductsFilters, selectProductsSort } from \"modules/Shop/selectors\";\nimport { getProducts } from \"modules/Shop/service\";\nvar GET_PRODUCTS_FAIL = SHOP_ACTION_TYPES.GET_PRODUCTS_FAIL,\n    GET_PRODUCTS_START = SHOP_ACTION_TYPES.GET_PRODUCTS_START,\n    GET_PRODUCTS_SUCCESS = SHOP_ACTION_TYPES.GET_PRODUCTS_SUCCESS,\n    RESET_PAGE = SHOP_ACTION_TYPES.RESET_PAGE,\n    RESET_PRODUCTS_FILTERS = SHOP_ACTION_TYPES.RESET_PRODUCTS_FILTERS,\n    RESET_PRODUCTS_SORTS = SHOP_ACTION_TYPES.RESET_PRODUCTS_SORTS,\n    SET_PAGE = SHOP_ACTION_TYPES.SET_PAGE,\n    SET_PRODUCTS_FILTER = SHOP_ACTION_TYPES.SET_PRODUCTS_FILTER,\n    SET_PRODUCTS_SORT = SHOP_ACTION_TYPES.SET_PRODUCTS_SORT;\n\nvar actionGetProductsFail = function actionGetProductsFail(errors) {\n  return function (dispatch) {\n    dispatch({\n      data: errors,\n      type: GET_PRODUCTS_FAIL\n    });\n  };\n};\n\nvar actionGetProductsStart = function actionGetProductsStart() {\n  return function (dispatch) {\n    dispatch({\n      type: GET_PRODUCTS_START\n    });\n  };\n};\n\nvar actionGetProductsSuccess = function actionGetProductsSuccess(data) {\n  return function (dispatch) {\n    dispatch({\n      data: data,\n      type: GET_PRODUCTS_SUCCESS\n    });\n  };\n};\n\nexport var actionGetProducts = function actionGetProducts() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var state, filters, page, sort, _yield$getProducts, data, errors, _data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(actionGetProductsStart());\n              _context.prev = 1;\n              state = getState();\n              filters = selectProductsFilters(state);\n              page = selectCurrentPage(state);\n              sort = selectProductsSort(state);\n              _context.next = 8;\n              return getProducts({\n                filters: filters,\n                page: page,\n                sort: sort\n              });\n\n            case 8:\n              _yield$getProducts = _context.sent;\n              data = _yield$getProducts.data;\n              errors = _yield$getProducts.errors;\n\n              if (!errors) {\n                if (page > 1) {\n                  _data = _objectSpread({\n                    isAdditional: true\n                  }, data);\n                  dispatch(actionGetProductsSuccess(_data));\n                } else {\n                  dispatch(actionGetProductsSuccess(data));\n                }\n              } else {\n                dispatch(actionGetProductsFail(errors));\n              }\n\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(actionGetProductsFail([_context.t0]));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 14]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var actionResetPage = function actionResetPage() {\n  return function (dispatch) {\n    dispatch({\n      type: RESET_PAGE\n    });\n  };\n};\nexport var actionResetProductsFilters = function actionResetProductsFilters() {\n  return function (dispatch) {\n    dispatch({\n      type: RESET_PRODUCTS_FILTERS\n    });\n  };\n};\nexport var actionResetProductsSorts = function actionResetProductsSorts() {\n  return function (dispatch) {\n    dispatch({\n      type: RESET_PRODUCTS_SORTS\n    });\n  };\n};\nexport var actionSetPage = function actionSetPage(data) {\n  return function (dispatch) {\n    dispatch({\n      data: data,\n      type: SET_PAGE\n    });\n  };\n};\nexport var actionSetProductsFilter = function actionSetProductsFilter(data) {\n  return function (dispatch) {\n    dispatch(actionResetPage());\n    dispatch({\n      data: data,\n      type: SET_PRODUCTS_FILTER\n    });\n  };\n};\nexport var actionSetProductsSort = function actionSetProductsSort(data) {\n  return function (dispatch) {\n    dispatch(actionResetPage());\n    dispatch({\n      data: data,\n      type: SET_PRODUCTS_SORT\n    });\n  };\n};","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/modules/Shop/actions/index.jsx"],"names":["GET_PRODUCTS_FAIL","GET_PRODUCTS_START","GET_PRODUCTS_SUCCESS","RESET_PAGE","RESET_PRODUCTS_FILTERS","RESET_PRODUCTS_SORTS","SET_PAGE","SET_PRODUCTS_FILTER","SET_PRODUCTS_SORT","SHOP_ACTION_TYPES","actionGetProductsFail","dispatch","data","type","actionGetProductsStart","actionGetProductsSuccess","actionGetProducts","state","getState","filters","selectProductsFilters","page","selectCurrentPage","sort","selectProductsSort","errors","getProducts","_data","isAdditional","actionResetPage","actionResetProductsFilters","actionResetProductsSorts","actionSetPage","actionSetProductsFilter","actionSetProductsSort"],"mappings":"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","sourcesContent":["// @flow\nimport { SHOP_ACTION_TYPES } from \"modules/Shop/constants\";\nimport {\n    selectCurrentPage,\n    selectProductsFilters,\n    selectProductsSort,\n} from \"modules/Shop/selectors\";\nimport { getProducts } from \"modules/Shop/service\";\n\nconst {\n    GET_PRODUCTS_FAIL,\n    GET_PRODUCTS_START,\n    GET_PRODUCTS_SUCCESS,\n    RESET_PAGE,\n    RESET_PRODUCTS_FILTERS,\n    RESET_PRODUCTS_SORTS,\n    SET_PAGE,\n    SET_PRODUCTS_FILTER,\n    SET_PRODUCTS_SORT,\n} = SHOP_ACTION_TYPES;\n\nconst actionGetProductsFail = (errors) => (dispatch) => {\n    dispatch({ data: errors, type: GET_PRODUCTS_FAIL });\n};\nconst actionGetProductsStart = () => (dispatch) => {\n    dispatch({ type: GET_PRODUCTS_START });\n};\nconst actionGetProductsSuccess = (data) => (dispatch) => {\n    dispatch({ data, type: GET_PRODUCTS_SUCCESS });\n};\n\nexport const actionGetProducts = (): any => async (dispatch, getState) => {\n    dispatch(actionGetProductsStart());\n\n    try {\n        const state = getState();\n        const filters = selectProductsFilters(state);\n        const page = selectCurrentPage(state);\n        const sort = selectProductsSort(state);\n\n        const { data, errors } = await getProducts({\n            filters,\n            page,\n            sort,\n        });\n\n        if (!errors) {\n            if (page > 1) {\n                const _data = {\n                    isAdditional: true,\n                    ...data,\n                };\n                dispatch(actionGetProductsSuccess(_data));\n            } else {\n                dispatch(actionGetProductsSuccess(data));\n            }\n        } else {\n            dispatch(actionGetProductsFail(errors));\n        }\n    } catch (error) {\n        dispatch(actionGetProductsFail([error]));\n    }\n};\n\nexport const actionResetPage = (): any => (dispatch) => {\n    dispatch({ type: RESET_PAGE });\n};\n\nexport const actionResetProductsFilters = (): any => (dispatch) => {\n    dispatch({ type: RESET_PRODUCTS_FILTERS });\n};\n\nexport const actionResetProductsSorts = (): any => (dispatch) => {\n    dispatch({ type: RESET_PRODUCTS_SORTS });\n};\n\nexport const actionSetPage = (data: number): any => (dispatch) => {\n    dispatch({ data, type: SET_PAGE });\n};\n\nexport const actionSetProductsFilter = (data: any): any => (dispatch) => {\n    dispatch(actionResetPage());\n    dispatch({ data, type: SET_PRODUCTS_FILTER });\n};\n\nexport const actionSetProductsSort = (data: any): any => (dispatch) => {\n    dispatch(actionResetPage());\n    dispatch({ data, type: SET_PRODUCTS_SORT });\n};\n"]},"metadata":{},"sourceType":"module"}