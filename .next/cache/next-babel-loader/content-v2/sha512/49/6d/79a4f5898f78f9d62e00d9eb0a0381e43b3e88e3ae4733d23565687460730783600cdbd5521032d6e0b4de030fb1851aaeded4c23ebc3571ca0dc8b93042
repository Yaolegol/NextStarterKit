{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOCALE_ACTION_TYPES } from \"modules/Locale/constants\";\nvar SET_LOCALE = LOCALE_ACTION_TYPES.SET_LOCALE;\nvar initialState = {\n  currentLocale: \"en\"\n};\nexport var localeReducer = function localeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var data = action.data,\n      type = action.type;\n\n  switch (type) {\n    case SET_LOCALE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentLocale: data\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/modules/Locale/reducer/index.jsx"],"names":["LOCALE_ACTION_TYPES","SET_LOCALE","initialState","currentLocale","localeReducer","state","action","data","type"],"mappings":";;;;;;AACA,SAASA,mBAAT,QAAoC,0BAApC;IAEQC,U,GAAeD,mB,CAAfC,U;AAER,IAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE;AADE,CAArB;AAIA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAiD;AAAA,MAAhDC,KAAgD,uEAAnCH,YAAmC;AAAA,MAArBI,MAAqB;AAAA,MAClEC,IADkE,GACnDD,MADmD,CAClEC,IADkE;AAAA,MAC5DC,IAD4D,GACnDF,MADmD,CAC5DE,IAD4D;;AAG1E,UAAQA,IAAR;AACI,SAAKP,UAAL;AACI,6CACOI,KADP;AAEIF,QAAAA,aAAa,EAAEI;AAFnB;;AAIJ;AACI,aAAOF,KAAP;AAPR;AASH,CAZM","sourcesContent":["// @flow\nimport { LOCALE_ACTION_TYPES } from \"modules/Locale/constants\";\n\nconst { SET_LOCALE } = LOCALE_ACTION_TYPES;\n\nconst initialState = {\n    currentLocale: \"en\",\n};\n\nexport const localeReducer = (state: any = initialState, action: any): any => {\n    const { data, type } = action;\n\n    switch (type) {\n        case SET_LOCALE:\n            return {\n                ...state,\n                currentLocale: data,\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}