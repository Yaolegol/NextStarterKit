{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Button } from \"common/components/Button\";\nimport { SortSelect } from \"common/components/CustomSelect/SortSelect\";\nimport { Layout } from \"common/components/Layout\";\nimport { selectCartProductsItems } from \"modules/Cart/selectors\";\nimport { actionGetProducts, actionResetPage, actionResetProductsFilters, actionResetProductsSorts, actionSetPage, actionSetProductsSort } from \"modules/Shop/actions\";\nimport { Filters } from \"modules/Shop/components/Filters\";\nimport { ProductCard } from \"modules/Shop/components/ProductCard\";\nimport { selectCurrentPage, selectProducts } from \"modules/Shop/selectors\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport \"./index.less\";\n\nvar ShopPage = function ShopPage(_ref) {\n  var cartProducts = _ref.cartProducts,\n      currentPage = _ref.currentPage,\n      dispatch = _ref.dispatch,\n      products = _ref.products;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      sortSelectValue = _useState2[0],\n      setSortSelectValue = _useState2[1];\n\n  var handleSortSelectChange = useCallback(function (value) {\n    setSortSelectValue(value);\n    dispatch(actionSetProductsSort(_defineProperty({}, value.id, value.value)));\n    dispatch(actionGetProducts());\n  }, [dispatch]);\n  var loadMoreProducts = useCallback(function () {\n    dispatch(actionSetPage(currentPage + 1));\n    dispatch(actionGetProducts());\n  }, [currentPage, dispatch]);\n  var productCards = useMemo(function () {\n    return products.list.map(function (_ref2) {\n      var description = _ref2.description,\n          _id = _ref2._id,\n          images = _ref2.images,\n          price = _ref2.price,\n          title = _ref2.title;\n      var initialCount = cartProducts[_id] ? cartProducts[_id].count : 0;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"shop-page__product-container\",\n        key: _id\n      }, /*#__PURE__*/React.createElement(ProductCard, {\n        description: description,\n        id: _id,\n        imageUrl: images[0],\n        initialCount: initialCount,\n        price: price,\n        title: title\n      }));\n    });\n  }, [cartProducts, products]);\n  var showMore = useMemo(function () {\n    var isShow = products.list.length < products.count;\n    return isShow ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page__show-more-container\"\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: loadMoreProducts,\n      theme: \"white\"\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"common.showMore\"\n    }))) : null;\n  }, [loadMoreProducts, products.count, products.list.length]);\n  useEffect(function () {\n    dispatch(actionResetPage());\n    dispatch(actionResetProductsFilters());\n    dispatch(actionResetProductsSorts());\n    dispatch(actionGetProducts());\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\"\n  }, /*#__PURE__*/React.createElement(\"h1\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"shop.title\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page__content\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page__filters-section\"\n  }, /*#__PURE__*/React.createElement(Filters, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page__goods-section\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page__sort-container\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"shop-page__sort-select\"\n  }, /*#__PURE__*/React.createElement(SortSelect, {\n    onChange: handleSortSelectChange,\n    value: sortSelectValue\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page__goods-container\"\n  }, productCards), showMore))));\n};\n\nexport default connect(function (state) {\n  return {\n    cartProducts: selectCartProductsItems(state),\n    currentPage: selectCurrentPage(state),\n    products: selectProducts(state)\n  };\n})(ShopPage);","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/pages/shop/index.jsx"],"names":["ShopPage","cartProducts","currentPage","dispatch","products","sortSelectValue","setSortSelectValue","useState","handleSortSelectChange","useCallback","actionSetProductsSort","value","actionGetProducts","loadMoreProducts","actionSetPage","productCards","useMemo","description","_id","images","price","title","initialCount","showMore","isShow","useEffect","actionResetPage","actionResetProductsFilters","actionResetProductsSorts","selectCartProductsItems","selectCurrentPage","selectProducts"],"mappings":"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","sourcesContent":["// @flow\nimport { Button } from \"common/components/Button\";\nimport { SortSelect } from \"common/components/CustomSelect/SortSelect\";\nimport { Layout } from \"common/components/Layout\";\nimport { selectCartProductsItems } from \"modules/Cart/selectors\";\nimport {\n    actionGetProducts,\n    actionResetPage,\n    actionResetProductsFilters,\n    actionResetProductsSorts,\n    actionSetPage,\n    actionSetProductsSort,\n} from \"modules/Shop/actions\";\nimport { Filters } from \"modules/Shop/components/Filters\";\nimport { ProductCard } from \"modules/Shop/components/ProductCard\";\nimport { selectCurrentPage, selectProducts } from \"modules/Shop/selectors\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport \"./index.less\";\n\ntype TProps = {\n    cartProducts: any,\n    currentPage: number,\n    dispatch: any,\n    products: any,\n};\n\nconst ShopPage = ({\n    cartProducts,\n    currentPage,\n    dispatch,\n    products,\n}: TProps): React$Node => {\n    const [sortSelectValue, setSortSelectValue] = useState(null);\n\n    const handleSortSelectChange = useCallback(\n        (value) => {\n            setSortSelectValue(value);\n            dispatch(\n                actionSetProductsSort({\n                    [value.id]: value.value,\n                })\n            );\n            dispatch(actionGetProducts());\n        },\n        [dispatch]\n    );\n\n    const loadMoreProducts = useCallback(() => {\n        dispatch(actionSetPage(currentPage + 1));\n        dispatch(actionGetProducts());\n    }, [currentPage, dispatch]);\n\n    const productCards = useMemo(() => {\n        return products.list.map(\n            ({ description, _id, images, price, title }) => {\n                const initialCount = cartProducts[_id]\n                    ? cartProducts[_id].count\n                    : 0;\n                return (\n                    <div className=\"shop-page__product-container\" key={_id}>\n                        <ProductCard\n                            description={description}\n                            id={_id}\n                            imageUrl={images[0]}\n                            initialCount={initialCount}\n                            price={price}\n                            title={title}\n                        />\n                    </div>\n                );\n            }\n        );\n    }, [cartProducts, products]);\n\n    const showMore = useMemo(() => {\n        const isShow = products.list.length < products.count;\n        return isShow ? (\n            <div className=\"shop-page__show-more-container\">\n                <Button onClick={loadMoreProducts} theme=\"white\">\n                    <FormattedMessage id=\"common.showMore\" />\n                </Button>\n            </div>\n        ) : null;\n    }, [loadMoreProducts, products.count, products.list.length]);\n\n    useEffect(() => {\n        dispatch(actionResetPage());\n        dispatch(actionResetProductsFilters());\n        dispatch(actionResetProductsSorts());\n        dispatch(actionGetProducts());\n    }, [dispatch]);\n\n    return (\n        <Layout>\n            <div className=\"shop-page\">\n                <h1>\n                    <FormattedMessage id=\"shop.title\" />\n                </h1>\n                <div className=\"shop-page__content\">\n                    <div className=\"shop-page__filters-section\">\n                        <Filters />\n                    </div>\n                    <div className=\"shop-page__goods-section\">\n                        <div className=\"shop-page__sort-container\">\n                            <span className=\"shop-page__sort-select\">\n                                <SortSelect\n                                    onChange={handleSortSelectChange}\n                                    value={sortSelectValue}\n                                />\n                            </span>\n                        </div>\n                        <div className=\"shop-page__goods-container\">\n                            {productCards}\n                        </div>\n                        {showMore}\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default (connect((state) => ({\n    cartProducts: selectCartProductsItems(state),\n    currentPage: selectCurrentPage(state),\n    products: selectProducts(state),\n}))(ShopPage): any);\n"]},"metadata":{},"sourceType":"module"}