{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { USER_ACTION_TYPES } from \"modules/User/constants\";\nvar GET_USER_FAIL = USER_ACTION_TYPES.GET_USER_FAIL,\n    GET_USER_START = USER_ACTION_TYPES.GET_USER_START,\n    GET_USER_SUCCESS = USER_ACTION_TYPES.GET_USER_SUCCESS;\nvar initialState = {\n  user: {}\n};\nexport var userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var data = action.data,\n      type = action.type;\n\n  switch (type) {\n    case GET_USER_FAIL:\n      return _objectSpread({}, state);\n\n    case GET_USER_START:\n      return _objectSpread({}, state);\n\n    case GET_USER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), data.user)\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/modules/User/reducer/index.jsx"],"names":["USER_ACTION_TYPES","GET_USER_FAIL","GET_USER_START","GET_USER_SUCCESS","initialState","user","userReducer","state","action","data","type"],"mappings":";;;;;;AACA,SAASA,iBAAT,QAAkC,wBAAlC;IAEQC,a,GAAoDD,iB,CAApDC,a;IAAeC,c,GAAqCF,iB,CAArCE,c;IAAgBC,gB,GAAqBH,iB,CAArBG,gB;AAEvC,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;AAIA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAiD;AAAA,MAAhDC,KAAgD,uEAAnCH,YAAmC;AAAA,MAArBI,MAAqB;AAAA,MAChEC,IADgE,GACjDD,MADiD,CAChEC,IADgE;AAAA,MAC1DC,IAD0D,GACjDF,MADiD,CAC1DE,IAD0D;;AAGxE,UAAQA,IAAR;AACI,SAAKT,aAAL;AACI,+BACOM,KADP;;AAGJ,SAAKL,cAAL;AACI,+BACOK,KADP;;AAGJ,SAAKJ,gBAAL;AACI,6CACOI,KADP;AAEIF,QAAAA,IAAI,kCACGE,KAAK,CAACF,IADT,GAEGI,IAAI,CAACJ,IAFR;AAFR;;AAOJ;AACI,aAAOE,KAAP;AAlBR;AAoBH,CAvBM","sourcesContent":["// @flow\nimport { USER_ACTION_TYPES } from \"modules/User/constants\";\n\nconst { GET_USER_FAIL, GET_USER_START, GET_USER_SUCCESS } = USER_ACTION_TYPES;\n\nconst initialState = {\n    user: {},\n};\n\nexport const userReducer = (state: any = initialState, action: any): any => {\n    const { data, type } = action;\n\n    switch (type) {\n        case GET_USER_FAIL:\n            return {\n                ...state,\n            };\n        case GET_USER_START:\n            return {\n                ...state,\n            };\n        case GET_USER_SUCCESS:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    ...data.user,\n                },\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}