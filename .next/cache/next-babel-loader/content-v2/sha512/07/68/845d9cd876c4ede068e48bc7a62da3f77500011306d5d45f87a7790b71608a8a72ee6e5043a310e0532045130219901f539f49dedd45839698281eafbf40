{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Tab } from \"common/components/Tabs/Tab\";\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport \"./index.less\";\nexport var Tabs = function Tabs(_ref) {\n  var activeTabId = _ref.activeTabId,\n      content = _ref.content,\n      ContentComponent = _ref.contentComponent,\n      tabs = _ref.tabs;\n\n  var _useState = useState(activeTabId),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeTab = _useState2[0],\n      setActiveTab = _useState2[1];\n\n  var onClickTab = useCallback(function (e) {\n    var id = e.target.dataset.id;\n    setActiveTab(Number(id));\n  }, []);\n\n  var _content = useMemo(function () {\n    return content.map(function (_ref2) {\n      var id = _ref2.id,\n          data = _ref2.data;\n      return /*#__PURE__*/React.createElement(ContentComponent, _extends({}, data, {\n        isActive: id === activeTab,\n        key: id\n      }));\n    });\n  }, [activeTab, content]);\n\n  var _tabs = useMemo(function () {\n    return tabs.map(function (_ref3) {\n      var id = _ref3.id,\n          name = _ref3.name;\n      return /*#__PURE__*/React.createElement(Tab, {\n        \"data-id\": id,\n        isActive: id === activeTab,\n        key: id,\n        onClick: onClickTab\n      }, name);\n    });\n  }, [activeTab, onClickTab, tabs]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs__menu-container\"\n  }, _tabs), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs__content-container\"\n  }, _content));\n};","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/common/components/Tabs/index.jsx"],"names":["Tabs","activeTabId","content","contentComponent","ContentComponent","tabs","activeTab","setActiveTab","useState","onClickTab","useCallback","id","e","Number","_content","useMemo","data","_tabs","name"],"mappings":";;AACA,SAAA,GAAA,QAAA,4BAAA;AACA,OAAA,KAAA,IAAA,QAAA,EAAA,OAAA,EAAA,WAAA,QAAA,OAAA;AACA,OAAA,cAAA;AAYA,OAAO,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAAA,IAAA,EAKM;AAAA,MAJtBC,WAIsB,GAAA,IAAA,CAJtBA,WAIsB;AAAA,MAHtBC,OAGsB,GAAA,IAAA,CAHtBA,OAGsB;AAAA,MAFJE,gBAEI,GAAA,IAAA,CAFtBD,gBAEsB;AAAA,MADtBE,IACsB,GAAA,IAAA,CADtBA,IACsB;;AAAA,MAAA,SAAA,GACYG,QAAQ,CADpB,WACoB,CADpB;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MACfF,SADe,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MACJC,YADI,GAAA,UAAA,CAAA,CAAA,CAAA;;AAGtB,MAAME,UAAU,GAAGC,WAAW,CAAC,UAAA,CAAA,EAAO;AAAA,QAC1BC,EAD0B,GACnBC,CAAC,CAADA,MAAAA,CADmB,OACnBA,CADmB,EAAA;AAElCL,IAAAA,YAAY,CAACM,MAAM,CAAnBN,EAAmB,CAAP,CAAZA;AAF0B,GAAA,EAA9B,EAA8B,CAA9B;;AAKA,MAAMO,QAAQ,GAAGC,OAAO,CAAC,YAAM;AAC3B,WAAO,OAAO,CAAP,GAAA,CAAY,UAAA,KAAA,EAAkB;AAAA,UAAfJ,EAAe,GAAA,KAAA,CAAfA,EAAe;AAAA,UAAXK,IAAW,GAAA,KAAA,CAAXA,IAAW;AACjC,aAAA,aACI,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEI,QAAA,QAAQ,EAAEL,EAAE,KAFhB,SAAA;AAGI,QAAA,GAAG,EAAEA;AAHT,OAAA,CAAA,CADJ;AADJ,KAAO,CAAP;AADoB,GAAA,EAUrB,CAAA,SAAA,EAVH,OAUG,CAVqB,CAAxB;;AAYA,MAAMM,KAAK,GAAGF,OAAO,CAAC,YAAM;AACxB,WAAO,IAAI,CAAJ,GAAA,CAAS,UAAA,KAAA,EAAkB;AAAA,UAAfJ,EAAe,GAAA,KAAA,CAAfA,EAAe;AAAA,UAAXO,IAAW,GAAA,KAAA,CAAXA,IAAW;AAC9B,aAAA,aACI,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACI,mBADJ,EAAA;AAEI,QAAA,QAAQ,EAAEP,EAAE,KAFhB,SAAA;AAGI,QAAA,GAAG,EAHP,EAAA;AAII,QAAA,OAAO,EAAEF;AAJb,OAAA,EADJ,IACI,CADJ;AADJ,KAAO,CAAP;AADiB,GAAA,EAalB,CAAA,SAAA,EAAA,UAAA,EAbH,IAaG,CAbkB,CAArB;;AAeA,SAAA,aACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,aACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EADJ,KACI,CADJ,EAAA,aAEI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAHR,QAGQ,CAFJ,CADJ;AAxCG,CAAA","sourcesContent":["// @flow\nimport { Tab } from \"common/components/Tabs/Tab\";\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport \"./index.less\";\n\ntype TProps = {\n    activeTabId: number,\n    content: Array<{\n        id: number,\n        data: { address: any, email: any, phone: any },\n    }>,\n    contentComponent: any,\n    tabs: Array<{ id: number, name: any }>,\n};\n\nexport const Tabs = ({\n    activeTabId,\n    content,\n    contentComponent: ContentComponent,\n    tabs,\n}: TProps): React$Node => {\n    const [activeTab, setActiveTab] = useState(activeTabId);\n\n    const onClickTab = useCallback((e) => {\n        const { id } = e.target.dataset;\n        setActiveTab(Number(id));\n    }, []);\n\n    const _content = useMemo(() => {\n        return content.map(({ id, data }) => {\n            return (\n                <ContentComponent\n                    {...data}\n                    isActive={id === activeTab}\n                    key={id}\n                />\n            );\n        });\n    }, [activeTab, content]);\n\n    const _tabs = useMemo(() => {\n        return tabs.map(({ id, name }) => {\n            return (\n                <Tab\n                    data-id={id}\n                    isActive={id === activeTab}\n                    key={id}\n                    onClick={onClickTab}\n                >\n                    {name}\n                </Tab>\n            );\n        });\n    }, [activeTab, onClickTab, tabs]);\n\n    return (\n        <div className=\"tabs\">\n            <div className=\"tabs__menu-container\">{_tabs}</div>\n            <div className=\"tabs__content-container\">{_content}</div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}