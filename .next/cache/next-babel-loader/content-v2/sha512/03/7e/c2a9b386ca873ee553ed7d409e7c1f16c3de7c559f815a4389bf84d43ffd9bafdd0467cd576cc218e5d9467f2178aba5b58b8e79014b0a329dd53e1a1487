{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { AUTH_ACTION_TYPES } from \"modules/Auth/constants\";\nimport { loginRequest, registrationRequest } from \"modules/Auth/service\";\nvar LOGIN_FAIL = AUTH_ACTION_TYPES.LOGIN_FAIL,\n    LOGIN_START = AUTH_ACTION_TYPES.LOGIN_START,\n    LOGIN_SUCCESS = AUTH_ACTION_TYPES.LOGIN_SUCCESS,\n    LOGOUT = AUTH_ACTION_TYPES.LOGOUT,\n    SIGNUP_FAIL = AUTH_ACTION_TYPES.SIGNUP_FAIL,\n    SIGNUP_START = AUTH_ACTION_TYPES.SIGNUP_START,\n    SIGNUP_SUCCESS = AUTH_ACTION_TYPES.SIGNUP_SUCCESS;\n\nvar actionLoginFail = function actionLoginFail(errors) {\n  return function (dispatch) {\n    dispatch({\n      data: errors,\n      type: LOGIN_FAIL\n    });\n  };\n};\n\nvar actionLoginStart = function actionLoginStart() {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN_START\n    });\n  };\n};\n\nvar actionLoginSuccess = function actionLoginSuccess(data) {\n  return function (dispatch) {\n    dispatch({\n      data: data,\n      type: LOGIN_SUCCESS\n    });\n  };\n};\n\nexport var actionLogin = function actionLogin(_ref) {\n  var userData = _ref.data;\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var _yield$loginRequest, data, errors;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(actionLoginStart());\n              _context.prev = 1;\n              _context.next = 4;\n              return loginRequest({\n                data: userData\n              });\n\n            case 4:\n              _yield$loginRequest = _context.sent;\n              data = _yield$loginRequest.data;\n              errors = _yield$loginRequest.errors;\n\n              if (!errors) {\n                dispatch(actionLoginSuccess(data));\n                localStorage.setItem(\"token\", data.token);\n              } else {\n                dispatch(actionLoginFail({\n                  errors: errors\n                }));\n              }\n\n              return _context.abrupt(\"return\", {\n                data: data,\n                errors: errors\n              });\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(actionLoginFail({\n                errors: _context.t0.message\n              }));\n              return _context.abrupt(\"return\", {\n                errors: [_context.t0.message]\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var actionLogout = function actionLogout() {\n  return function (dispatch, getState) {\n    localStorage.removeItem(\"token\");\n    window.location.href = \"/\";\n    dispatch({\n      type: LOGOUT\n    });\n  };\n};\n\nvar actionSignUpFail = function actionSignUpFail(errors) {\n  return function (dispatch) {\n    dispatch({\n      data: errors,\n      type: SIGNUP_FAIL\n    });\n  };\n};\n\nvar actionSignUpStart = function actionSignUpStart() {\n  return function (dispatch) {\n    dispatch({\n      type: SIGNUP_START\n    });\n  };\n};\n\nvar actionSignUpSuccess = function actionSignUpSuccess(data) {\n  return function (dispatch) {\n    dispatch({\n      data: data,\n      type: SIGNUP_SUCCESS\n    });\n  };\n};\n\nexport var actionRegistration = function actionRegistration(_ref3) {\n  var userData = _ref3.data;\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      var _yield$registrationRe, data, errors;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(actionSignUpStart());\n              _context2.prev = 1;\n              _context2.next = 4;\n              return registrationRequest({\n                data: userData\n              });\n\n            case 4:\n              _yield$registrationRe = _context2.sent;\n              data = _yield$registrationRe.data;\n              errors = _yield$registrationRe.errors;\n\n              if (!errors) {\n                dispatch(actionSignUpSuccess(data));\n              } else {\n                dispatch(actionSignUpFail({\n                  errors: errors\n                }));\n              }\n\n              return _context2.abrupt(\"return\", {\n                data: data,\n                errors: errors\n              });\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch(actionSignUpFail({\n                errors: _context2.t0.message\n              }));\n              return _context2.abrupt(\"return\", {\n                errors: _context2.t0\n              });\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 11]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/modules/Auth/actions/index.jsx"],"names":["AUTH_ACTION_TYPES","loginRequest","registrationRequest","LOGIN_FAIL","LOGIN_START","LOGIN_SUCCESS","LOGOUT","SIGNUP_FAIL","SIGNUP_START","SIGNUP_SUCCESS","actionLoginFail","errors","dispatch","data","type","actionLoginStart","actionLoginSuccess","actionLogin","userData","getState","localStorage","setItem","token","message","actionLogout","removeItem","window","location","href","actionSignUpFail","actionSignUpStart","actionSignUpSuccess","actionRegistration"],"mappings":"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","sourcesContent":["// @flow\nimport { AUTH_ACTION_TYPES } from \"modules/Auth/constants\";\nimport { loginRequest, registrationRequest } from \"modules/Auth/service\";\n\nconst {\n    LOGIN_FAIL,\n    LOGIN_START,\n    LOGIN_SUCCESS,\n    LOGOUT,\n    SIGNUP_FAIL,\n    SIGNUP_START,\n    SIGNUP_SUCCESS,\n} = AUTH_ACTION_TYPES;\n\nconst actionLoginFail = (errors) => (dispatch) => {\n    dispatch({ data: errors, type: LOGIN_FAIL });\n};\nconst actionLoginStart = () => (dispatch) => {\n    dispatch({ type: LOGIN_START });\n};\nconst actionLoginSuccess = (data) => (dispatch) => {\n    dispatch({ data, type: LOGIN_SUCCESS });\n};\n\nexport const actionLogin = ({ data: userData }: any): any => async (\n    dispatch,\n    getState\n) => {\n    dispatch(actionLoginStart());\n\n    try {\n        const { data, errors } = await loginRequest({\n            data: userData,\n        });\n\n        if (!errors) {\n            dispatch(actionLoginSuccess(data));\n            localStorage.setItem(\"token\", data.token);\n        } else {\n            dispatch(actionLoginFail({ errors }));\n        }\n\n        return { data, errors };\n    } catch (error) {\n        dispatch(actionLoginFail({ errors: error.message }));\n\n        return { errors: [error.message] };\n    }\n};\n\nexport const actionLogout = (): any => (dispatch, getState) => {\n    localStorage.removeItem(\"token\");\n    window.location.href = \"/\";\n    dispatch({ type: LOGOUT });\n};\n\nconst actionSignUpFail = (errors) => (dispatch) => {\n    dispatch({ data: errors, type: SIGNUP_FAIL });\n};\nconst actionSignUpStart = () => (dispatch) => {\n    dispatch({ type: SIGNUP_START });\n};\nconst actionSignUpSuccess = (data) => (dispatch) => {\n    dispatch({ data, type: SIGNUP_SUCCESS });\n};\n\nexport const actionRegistration = ({ data: userData }: any): any => async (\n    dispatch,\n    getState\n) => {\n    dispatch(actionSignUpStart());\n\n    try {\n        const { data, errors } = await registrationRequest({\n            data: userData,\n        });\n\n        if (!errors) {\n            dispatch(actionSignUpSuccess(data));\n        } else {\n            dispatch(actionSignUpFail({ errors }));\n        }\n\n        return { data, errors };\n    } catch (error) {\n        dispatch(actionSignUpFail({ errors: error.message }));\n\n        return { errors: error };\n    }\n};\n"]},"metadata":{},"sourceType":"module"}