{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CART_ACTION_TYPES } from \"modules/Cart/constants\";\nvar initialState = {\n  products: {\n    total: 0,\n    items: {}\n  }\n};\nvar DECREMENT_PRODUCTS_COUNT = CART_ACTION_TYPES.DECREMENT_PRODUCTS_COUNT,\n    INCREMENT_PRODUCTS_COUNT = CART_ACTION_TYPES.INCREMENT_PRODUCTS_COUNT,\n    RESET_CART = CART_ACTION_TYPES.RESET_CART;\nexport var cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var data = action.data,\n      type = action.type;\n\n  switch (type) {\n    case DECREMENT_PRODUCTS_COUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        products: _objectSpread(_objectSpread({}, state.products), {}, {\n          total: state.products.total - 1,\n          items: _objectSpread(_objectSpread({}, state.products.items), {}, _defineProperty({}, data.id, _objectSpread(_objectSpread({}, state.products.items[data.id]), {}, {\n            count: state.products.items[data.id] && state.products.items[data.id].count ? state.products.items[data.id].count - 1 : 0\n          })))\n        })\n      });\n\n    case INCREMENT_PRODUCTS_COUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        products: _objectSpread(_objectSpread({}, state.products), {}, {\n          total: state.products.total + 1,\n          items: _objectSpread(_objectSpread({}, state.products.items), {}, _defineProperty({}, data.id, _objectSpread(_objectSpread({}, state.products.items[data.id]), {}, {\n            count: state.products.items[data.id] && state.products.items[data.id].count ? state.products.items[data.id].count + 1 : 1\n          })))\n        })\n      });\n\n    case RESET_CART:\n      return initialState;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/modules/Cart/reducer/index.jsx"],"names":["CART_ACTION_TYPES","initialState","products","total","items","DECREMENT_PRODUCTS_COUNT","INCREMENT_PRODUCTS_COUNT","RESET_CART","cartReducer","state","action","data","type","id","count"],"mappings":";;;;;;AACA,SAASA,iBAAT,QAAkC,wBAAlC;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,CADD;AAENC,IAAAA,KAAK,EAAE;AAFD;AADO,CAArB;IAQIC,wB,GAGAL,iB,CAHAK,wB;IACAC,wB,GAEAN,iB,CAFAM,wB;IACAC,U,GACAP,iB,CADAO,U;AAGJ,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAiD;AAAA,MAAhDC,KAAgD,uEAAnCR,YAAmC;AAAA,MAArBS,MAAqB;AAAA,MAChEC,IADgE,GACjDD,MADiD,CAChEC,IADgE;AAAA,MAC1DC,IAD0D,GACjDF,MADiD,CAC1DE,IAD0D;;AAGxE,UAAQA,IAAR;AACI,SAAKP,wBAAL;AACI,6CACOI,KADP;AAEIP,QAAAA,QAAQ,kCACDO,KAAK,CAACP,QADL;AAEJC,UAAAA,KAAK,EAAEM,KAAK,CAACP,QAAN,CAAeC,KAAf,GAAuB,CAF1B;AAGJC,UAAAA,KAAK,kCACEK,KAAK,CAACP,QAAN,CAAeE,KADjB,2BAEAO,IAAI,CAACE,EAFL,kCAGMJ,KAAK,CAACP,QAAN,CAAeE,KAAf,CAAqBO,IAAI,CAACE,EAA1B,CAHN;AAIGC,YAAAA,KAAK,EACDL,KAAK,CAACP,QAAN,CAAeE,KAAf,CAAqBO,IAAI,CAACE,EAA1B,KACAJ,KAAK,CAACP,QAAN,CAAeE,KAAf,CAAqBO,IAAI,CAACE,EAA1B,EAA8BC,KAD9B,GAEML,KAAK,CAACP,QAAN,CAAeE,KAAf,CAAqBO,IAAI,CAACE,EAA1B,EAA8BC,KAA9B,GAAsC,CAF5C,GAGM;AARb;AAHD;AAFZ;;AAkBJ,SAAKR,wBAAL;AACI,6CACOG,KADP;AAEIP,QAAAA,QAAQ,kCACDO,KAAK,CAACP,QADL;AAEJC,UAAAA,KAAK,EAAEM,KAAK,CAACP,QAAN,CAAeC,KAAf,GAAuB,CAF1B;AAGJC,UAAAA,KAAK,kCACEK,KAAK,CAACP,QAAN,CAAeE,KADjB,2BAEAO,IAAI,CAACE,EAFL,kCAGMJ,KAAK,CAACP,QAAN,CAAeE,KAAf,CAAqBO,IAAI,CAACE,EAA1B,CAHN;AAIGC,YAAAA,KAAK,EACDL,KAAK,CAACP,QAAN,CAAeE,KAAf,CAAqBO,IAAI,CAACE,EAA1B,KACAJ,KAAK,CAACP,QAAN,CAAeE,KAAf,CAAqBO,IAAI,CAACE,EAA1B,EAA8BC,KAD9B,GAEML,KAAK,CAACP,QAAN,CAAeE,KAAf,CAAqBO,IAAI,CAACE,EAA1B,EAA8BC,KAA9B,GAAsC,CAF5C,GAGM;AARb;AAHD;AAFZ;;AAkBJ,SAAKP,UAAL;AACI,aAAON,YAAP;;AACJ;AACI,aAAOQ,KAAP;AA1CR;AA4CH,CA/CM","sourcesContent":["// @flow\nimport { CART_ACTION_TYPES } from \"modules/Cart/constants\";\n\nconst initialState = {\n    products: {\n        total: 0,\n        items: {},\n    },\n};\n\nconst {\n    DECREMENT_PRODUCTS_COUNT,\n    INCREMENT_PRODUCTS_COUNT,\n    RESET_CART,\n} = CART_ACTION_TYPES;\n\nexport const cartReducer = (state: any = initialState, action: any): any => {\n    const { data, type } = action;\n\n    switch (type) {\n        case DECREMENT_PRODUCTS_COUNT:\n            return {\n                ...state,\n                products: {\n                    ...state.products,\n                    total: state.products.total - 1,\n                    items: {\n                        ...state.products.items,\n                        [data.id]: {\n                            ...state.products.items[data.id],\n                            count:\n                                state.products.items[data.id] &&\n                                state.products.items[data.id].count\n                                    ? state.products.items[data.id].count - 1\n                                    : 0,\n                        },\n                    },\n                },\n            };\n        case INCREMENT_PRODUCTS_COUNT:\n            return {\n                ...state,\n                products: {\n                    ...state.products,\n                    total: state.products.total + 1,\n                    items: {\n                        ...state.products.items,\n                        [data.id]: {\n                            ...state.products.items[data.id],\n                            count:\n                                state.products.items[data.id] &&\n                                state.products.items[data.id].count\n                                    ? state.products.items[data.id].count + 1\n                                    : 1,\n                        },\n                    },\n                },\n            };\n        case RESET_CART:\n            return initialState;\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}