{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { logError } from \"common/helpers/errors\";\nvar requestHost = \"\";\n\nif (true) {\n  requestHost = \"http://localhost:8000\";\n}\n\nexport var request = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var formData, isPrivate, _ref2$options, options, _ref2$toJSON, toJSON, url, headers, _options, token, fd, response;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            formData = _ref2.formData, isPrivate = _ref2.isPrivate, _ref2$options = _ref2.options, options = _ref2$options === void 0 ? {} : _ref2$options, _ref2$toJSON = _ref2.toJSON, toJSON = _ref2$toJSON === void 0 ? true : _ref2$toJSON, url = _ref2.url;\n            headers = {};\n            _options = _objectSpread({}, options);\n\n            if (options.headers) {\n              headers = _objectSpread({}, options.headers);\n            }\n\n            if (!isPrivate) {\n              _context.next = 10;\n              break;\n            }\n\n            token = localStorage.getItem(\"token\");\n\n            if (token) {\n              _context.next = 9;\n              break;\n            }\n\n            console.info(\"---Token not found\");\n            return _context.abrupt(\"return\");\n\n          case 9:\n            headers = _objectSpread(_objectSpread({}, headers), {}, {\n              Authorization: \"Bearer \".concat(token)\n            });\n\n          case 10:\n            fd = new FormData();\n\n            if (formData) {\n              Object.keys(formData).forEach(function (name) {\n                var value = formData[name];\n\n                if (value instanceof FileList) {\n                  _toConsumableArray(value).forEach(function (file) {\n                    fd.append(file.name, file, file.name);\n                  });\n                } else {\n                  fd.append(name, value);\n                }\n              });\n              _options = _objectSpread(_objectSpread({}, _options), {}, {\n                body: fd\n              });\n            }\n\n            _context.prev = 12;\n            _context.next = 15;\n            return fetch(\"\".concat(requestHost).concat(url), _objectSpread(_objectSpread({}, _options), {}, {\n              headers: _objectSpread({}, headers)\n            }));\n\n          case 15:\n            response = _context.sent;\n            _context.next = 18;\n            return handleResponse({\n              response: response,\n              toJSON: toJSON\n            });\n\n          case 18:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](12);\n            logError(_context.t0, \"request\");\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[12, 21]]);\n  }));\n\n  return function request(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar handleResponse = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref4) {\n    var response, toJSON, status, _yield$response$json, data, errors;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            response = _ref4.response, toJSON = _ref4.toJSON;\n\n            if (!toJSON) {\n              _context2.next = 15;\n              break;\n            }\n\n            _context2.prev = 2;\n            status = response.status;\n            _context2.next = 6;\n            return response.json();\n\n          case 6:\n            _yield$response$json = _context2.sent;\n            data = _yield$response$json.data;\n            errors = _yield$response$json.errors;\n            return _context2.abrupt(\"return\", {\n              data: data,\n              errors: errors,\n              status: status\n            });\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](2);\n            logError(_context2.t0, \"handleResponse\");\n\n          case 15:\n            return _context2.abrupt(\"return\", {\n              response: response\n            });\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 12]]);\n  }));\n\n  return function handleResponse(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/app/service/index.js"],"names":["logError","requestHost","request","formData","isPrivate","options","toJSON","url","headers","_options","token","localStorage","getItem","console","info","Authorization","fd","FormData","Object","keys","forEach","name","value","FileList","file","append","body","fetch","response","handleResponse","status","json","data","errors"],"mappings":"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","sourcesContent":["// @flow\nimport { logError } from \"common/helpers/errors\";\n\nlet requestHost = \"\";\n\nif (process.env.NODE_ENV === \"development\") {\n    requestHost = \"http://localhost:8000\";\n}\n\ntype TProps = {\n    formData?: any,\n    isPrivate?: boolean,\n    options?: any,\n    toJSON?: boolean,\n    url: string,\n};\n\nexport const request = async ({\n    formData,\n    isPrivate,\n    options = {},\n    toJSON = true,\n    url,\n}: TProps): any => {\n    let headers = {};\n    let _options = { ...options };\n\n    if (options.headers) {\n        headers = {\n            ...options.headers,\n        };\n    }\n\n    if (isPrivate) {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n            console.info(\"---Token not found\");\n            return;\n        }\n        headers = {\n            ...headers,\n            Authorization: `Bearer ${token}`,\n        };\n    }\n    const fd = new FormData();\n\n    if (formData) {\n        Object.keys(formData).forEach((name) => {\n            const value = formData[name];\n            if (value instanceof FileList) {\n                [...value].forEach((file) => {\n                    fd.append(file.name, file, file.name);\n                });\n            } else {\n                fd.append(name, value);\n            }\n        });\n\n        _options = {\n            ..._options,\n            body: fd,\n        };\n    }\n\n    try {\n        const response = await fetch(`${requestHost}${url}`, {\n            ..._options,\n            headers: {\n                ...headers,\n            },\n        });\n        return await handleResponse({ response, toJSON });\n    } catch (error) {\n        logError(error, \"request\");\n    }\n};\n\nconst handleResponse = async ({ response, toJSON }) => {\n    if (toJSON) {\n        try {\n            const { status } = response;\n            const { data, errors } = await response.json();\n            return { data, errors, status };\n        } catch (error) {\n            logError(error, \"handleResponse\");\n        }\n    }\n    return { response };\n};\n"]},"metadata":{},"sourceType":"module"}