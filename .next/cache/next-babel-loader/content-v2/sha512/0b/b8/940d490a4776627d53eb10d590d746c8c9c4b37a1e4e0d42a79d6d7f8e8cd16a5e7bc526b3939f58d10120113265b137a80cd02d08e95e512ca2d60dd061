{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { AUTH_ACTION_TYPES } from \"modules/Auth/constants\";\nimport { loginRequest, registrationRequest } from \"modules/Auth/service\";\nvar LOGIN_FAIL = AUTH_ACTION_TYPES.LOGIN_FAIL,\n    LOGIN_START = AUTH_ACTION_TYPES.LOGIN_START,\n    LOGIN_SUCCESS = AUTH_ACTION_TYPES.LOGIN_SUCCESS,\n    LOGOUT = AUTH_ACTION_TYPES.LOGOUT,\n    SIGNUP_FAIL = AUTH_ACTION_TYPES.SIGNUP_FAIL,\n    SIGNUP_START = AUTH_ACTION_TYPES.SIGNUP_START,\n    SIGNUP_SUCCESS = AUTH_ACTION_TYPES.SIGNUP_SUCCESS;\n\nvar actionLoginFail = function actionLoginFail(errors) {\n  return function (dispatch) {\n    dispatch({\n      data: errors,\n      type: LOGIN_FAIL\n    });\n  };\n};\n\nvar actionLoginStart = function actionLoginStart() {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN_START\n    });\n  };\n};\n\nvar actionLoginSuccess = function actionLoginSuccess(data) {\n  return function (dispatch) {\n    dispatch({\n      data: data,\n      type: LOGIN_SUCCESS\n    });\n  };\n};\n\nexport var actionLogin = function actionLogin(_ref) {\n  var userData = _ref.data;\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var _yield$loginRequest, data, errors;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(actionLoginStart());\n              _context.prev = 1;\n              _context.next = 4;\n              return loginRequest({\n                data: userData\n              });\n\n            case 4:\n              _yield$loginRequest = _context.sent;\n              data = _yield$loginRequest.data;\n              errors = _yield$loginRequest.errors;\n\n              if (!errors) {\n                dispatch(actionLoginSuccess(data));\n                localStorage.setItem(\"token\", data.token);\n              } else {\n                dispatch(actionLoginFail({\n                  errors: errors\n                }));\n              }\n\n              return _context.abrupt(\"return\", {\n                data: data,\n                errors: errors\n              });\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(actionLoginFail({\n                errors: _context.t0.message\n              }));\n              return _context.abrupt(\"return\", {\n                errors: [_context.t0.message]\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var actionLogout = function actionLogout() {\n  return function (dispatch, getState) {\n    localStorage.removeItem(\"token\");\n    window.location.href = \"/\";\n    dispatch({\n      type: LOGOUT\n    });\n  };\n};\n\nvar actionSignUpFail = function actionSignUpFail(errors) {\n  return function (dispatch) {\n    dispatch({\n      data: errors,\n      type: SIGNUP_FAIL\n    });\n  };\n};\n\nvar actionSignUpStart = function actionSignUpStart() {\n  return function (dispatch) {\n    dispatch({\n      type: SIGNUP_START\n    });\n  };\n};\n\nvar actionSignUpSuccess = function actionSignUpSuccess(data) {\n  return function (dispatch) {\n    dispatch({\n      data: data,\n      type: SIGNUP_SUCCESS\n    });\n  };\n};\n\nexport var actionRegistration = function actionRegistration(_ref3) {\n  var userData = _ref3.data;\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      var _yield$registrationRe, data, errors;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(actionSignUpStart());\n              _context2.prev = 1;\n              _context2.next = 4;\n              return registrationRequest({\n                data: userData\n              });\n\n            case 4:\n              _yield$registrationRe = _context2.sent;\n              data = _yield$registrationRe.data;\n              errors = _yield$registrationRe.errors;\n\n              if (!errors) {\n                dispatch(actionSignUpSuccess(data));\n              } else {\n                dispatch(actionSignUpFail({\n                  errors: errors\n                }));\n              }\n\n              return _context2.abrupt(\"return\", {\n                data: data,\n                errors: errors\n              });\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch(actionSignUpFail({\n                errors: _context2.t0.message\n              }));\n              return _context2.abrupt(\"return\", {\n                errors: _context2.t0\n              });\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 11]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/oleg/PhpstormProjects/NextStarterKit/src/modules/Auth/actions/index.jsx"],"names":["LOGIN_FAIL","LOGIN_START","LOGIN_SUCCESS","LOGOUT","SIGNUP_FAIL","SIGNUP_START","SIGNUP_SUCCESS","AUTH_ACTION_TYPES","actionLoginFail","dispatch","data","type","actionLoginStart","actionLoginSuccess","actionLogin","userData","errors","loginRequest","localStorage","message","actionLogout","window","actionSignUpFail","actionSignUpStart","actionSignUpSuccess","actionRegistration","registrationRequest"],"mappings":"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","sourcesContent":["// @flow\nimport { AUTH_ACTION_TYPES } from \"modules/Auth/constants\";\nimport { loginRequest, registrationRequest } from \"modules/Auth/service\";\n\nconst {\n    LOGIN_FAIL,\n    LOGIN_START,\n    LOGIN_SUCCESS,\n    LOGOUT,\n    SIGNUP_FAIL,\n    SIGNUP_START,\n    SIGNUP_SUCCESS,\n} = AUTH_ACTION_TYPES;\n\nconst actionLoginFail = (errors) => (dispatch) => {\n    dispatch({ data: errors, type: LOGIN_FAIL });\n};\nconst actionLoginStart = () => (dispatch) => {\n    dispatch({ type: LOGIN_START });\n};\nconst actionLoginSuccess = (data) => (dispatch) => {\n    dispatch({ data, type: LOGIN_SUCCESS });\n};\n\nexport const actionLogin = ({ data: userData }: any): any => async (\n    dispatch,\n    getState\n) => {\n    dispatch(actionLoginStart());\n\n    try {\n        const { data, errors } = await loginRequest({\n            data: userData,\n        });\n\n        if (!errors) {\n            dispatch(actionLoginSuccess(data));\n            localStorage.setItem(\"token\", data.token);\n        } else {\n            dispatch(actionLoginFail({ errors }));\n        }\n\n        return { data, errors };\n    } catch (error) {\n        dispatch(actionLoginFail({ errors: error.message }));\n\n        return { errors: [error.message] };\n    }\n};\n\nexport const actionLogout = (): any => (dispatch, getState) => {\n    localStorage.removeItem(\"token\");\n    window.location.href = \"/\";\n    dispatch({ type: LOGOUT });\n};\n\nconst actionSignUpFail = (errors) => (dispatch) => {\n    dispatch({ data: errors, type: SIGNUP_FAIL });\n};\nconst actionSignUpStart = () => (dispatch) => {\n    dispatch({ type: SIGNUP_START });\n};\nconst actionSignUpSuccess = (data) => (dispatch) => {\n    dispatch({ data, type: SIGNUP_SUCCESS });\n};\n\nexport const actionRegistration = ({ data: userData }: any): any => async (\n    dispatch,\n    getState\n) => {\n    dispatch(actionSignUpStart());\n\n    try {\n        const { data, errors } = await registrationRequest({\n            data: userData,\n        });\n\n        if (!errors) {\n            dispatch(actionSignUpSuccess(data));\n        } else {\n            dispatch(actionSignUpFail({ errors }));\n        }\n\n        return { data, errors };\n    } catch (error) {\n        dispatch(actionSignUpFail({ errors: error.message }));\n\n        return { errors: error };\n    }\n};\n"]},"metadata":{},"sourceType":"module"}